!function(e){var t={};function n(a){if(t[a])return t[a].exports;var i=t[a]={i:a,l:!1,exports:{}};return e[a].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(a,i,function(t){return e[t]}.bind(null,i));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t),n.d(t,"startGame",(function(){return B})),n.d(t,"showMap",(function(){return G})),n.d(t,"showBattle",(function(){return K})),n.d(t,"Controllers",(function(){return X})),n.d(t,"nextLevel",(function(){return z})),n.d(t,"restart",(function(){return F}));var a=class{constructor({name:e}){this.element=document.querySelector("[controller='"+e+"']"),this.initDisplay=this.element.style.display,this.visible=!0,this.onInit()}show(e){this.element.style.display=this.initDisplay,this.visible=!0,this.onShow(e)}hide(e){this.element.style.display="none",this.visible=!1,this.onHide(e)}onInit(){}onShow(){}onHide(){}};const i=(e,t)=>(null==t&&(t=e,e=0),Math.floor(Math.random()*(t-e))+e);class s{constructor(e){this.name=e.data.name,this.health=e.data.health,this.attack=e.data.attack,this.defence=e.data.defence,this.dexterity=e.data.dexterity}hit(e){(e-=this.defence)>0&&(this.health-=e)}}const r=(e,t)=>{const n=i(e+t);return{pass:e>n,critical:0===n}};var h=class extends a{onInit(){this.element.querySelector("#attack").addEventListener("click",()=>{this.tick(!0)}),this.enemy=null}tick(e=!1){this.animateAttack();const t=this.player.getDexterity(),n=this.enemy.dexterity;if(!0===e){const e=r(t,n);let a=0;e.critical?a=2*this.player.getDamage():e.pass&&(a=this.player.getDamage()),a>0&&(this.enemy.hit(a),this.updateUi(),this.animate("health")),this.enemy.health<1&&G()}const a=r(n,t);a.critical?this.player.hit(2*this.enemy.attack):a.pass&&this.player.hit(this.enemy.attack),this.player.getHealth()<1&&(alert("You are dead"),F())}onShow(e){this.enemy=new s(e.enemy),this.player=X.stats.getStats(),this.updateUi()}updateUi(){this.element.querySelector("[name]").innerText=this.enemy.name,this.element.querySelector("[health]").innerText=this.enemy.health,this.element.querySelector("[damage]").innerText=this.enemy.attack,this.element.querySelector("[defence]").innerText=this.enemy.defence,this.element.querySelector("[dexterity]").innerText=this.enemy.dexterity}animate(e,t){const n=this.element.querySelector("["+e+"]").classList;n.add("animateNegative"),setTimeout(()=>{n.remove("animateNegative")},250)}animateAttack(){const e=this.element.querySelector("#attack").classList;e.add("animateAttack"),setTimeout(()=>{e.remove("animateAttack")},100)}};var o={EMPTY:0,ENEMY:1,NPO:2};var l=class{constructor({color:e,type:t,onClick:n,onOpen:a,img:i,data:s}){this.color=e,this.type=t,this.shown=!1,this.enemies=0,this.onClick=n,this.onOpen=a,this.img=i,this.enabled=!0,this.data=s}click(){this.onClick&&this.onClick()}open(){this.onOpen&&this.onOpen()}enable(e=!0){this.enabled=e}};function d(){K({enemy:this})}const c=()=>new l({img:"deadEnemy",type:o.ENEMY,onOpen:d,data:{name:"Snake",health:5,attack:2,defence:0,dexterity:9}}),m=()=>new l({img:"deadEnemy",type:o.ENEMY,onOpen:d,data:{name:"Goblin",health:4,attack:2,defence:0,dexterity:7}}),y=()=>new l({img:"deadEnemy",type:o.ENEMY,onOpen:d,data:{name:"Dark elf",health:6,attack:5,defence:0,dexterity:8}}),p=()=>new l({img:"deadEnemy",type:o.ENEMY,onOpen:d,data:{name:"Orc",health:7,attack:5,defence:2,dexterity:5}}),f=()=>new l({img:"deadEnemy",type:o.ENEMY,onOpen:d,data:{name:"Dark Knight",health:10,attack:8,defence:4,dexterity:7}}),u=()=>new l({img:"dungeonEnter",type:o.NPO,onClick:function(){z()}}),x=e=>new l({img:"treasure",type:o.NPO,onClick:function(){this.enabled&&(X.stats.addItem(e),this.enable(!1))}});function w(e,t,n,a){const i=new Image;i.src=t,i.onload=n,this.context=e,this.image=i,this.mapping=a}w.prototype.draw=function(e,t,n){const a=this.mapping[e];this.context.drawImage(this.image,32*a.x,32*a.y,32,32,32*t,32*n,32,32)};var g=w;const v=[{maxTreasures:5,maxItemLevel:4,enemies:[{enemy:m,qty:12},{enemy:c,qty:8}]},{maxTreasures:4,maxItemLevel:8,enemies:[{enemy:p,qty:5},{enemy:m,qty:10},{enemy:c,qty:10}]},{maxTreasures:3,maxItemLevel:12,enemies:[{enemy:p,qty:10},{enemy:y,qty:10},{enemy:m,qty:10}]},{maxTreasures:4,maxItemLevel:16,enemies:[{enemy:p,qty:10},{enemy:y,qty:10},{enemy:m,qty:5},{enemy:f,qty:5},{enemy:c,qty:5}]},{maxTreasures:3,maxItemLevel:20,enemies:[{enemy:p,qty:15},{enemy:y,qty:20},{enemy:f,qty:5}]}],S=1,E=2,k=3;var b=class{constructor({name:e,type:t,effect:n,data:a,monoUse:i=!1}){this.name=e,this.type=t,this.effect=n,this.data=a,this.monoUse=i}use(e){this.effect&&this.effect(e)}};function T(e){e.setWeapon(this)}function q(e){e.setArmor(this)}function M(e){e.heal(this.data.heal)}const I=()=>new b({name:"Dagger",type:E,effect:T,data:{damage:1,dexterity:2}}),O=()=>new b({name:"Wooden stick",type:E,effect:T,data:{damage:1}}),U=[()=>new b({name:"Small health potion",type:S,effect:M,monoUse:!0,data:{heal:1}}),O,I,()=>new b({name:"Mace",type:E,effect:T,data:{damage:6,dexterity:-4}}),()=>new b({name:"Short sword",type:E,effect:T,data:{damage:2,dexterity:1}}),()=>new b({name:"Wooden armor",type:k,effect:q,data:{defence:2,dexterity:-2}}),()=>new b({name:"Leather armor",type:k,effect:q,data:{defence:1,dexterity:0}}),()=>new b({name:"Axe",type:E,effect:T,data:{damage:5,dexterity:-2}}),()=>new b({name:"Sword",type:E,effect:T,data:{damage:3}}),()=>new b({name:"Long sword",type:E,effect:T,data:{damage:4,dexterity:-1}}),()=>new b({name:"Health potion",type:S,effect:M,monoUse:!0,data:{heal:2}}),()=>new b({name:"Silver mace",type:E,effect:T,data:{damage:7,dexterity:-4}}),()=>new b({name:"Steel armor",type:k,effect:q,data:{defence:4,dexterity:-3}}),()=>new b({name:"Two handed sword",type:E,effect:T,data:{damage:7,dexterity:-2}}),()=>new b({name:"Axe",type:E,effect:T,data:{damage:6,dexterity:-2}}),()=>new b({name:"Silver armor",type:k,effect:q,data:{defence:5,dexterity:-3}}),()=>new b({name:"Silver dagger",type:E,effect:T,data:{damage:2,dexterity:2}}),()=>new b({name:"Elder sword",type:E,effect:T,data:{damage:5,dexterity:1}}),()=>new b({name:"Two handed silver sword",type:E,effect:T,data:{damage:8,dexterity:-2}}),()=>new b({name:"Elder armor",type:k,effect:q,data:{defence:6,dexterity:-2}}),()=>new b({name:"Silver sword",type:E,effect:T,data:{damage:4}}),()=>new b({name:"Big health potion",type:S,effect:M,monoUse:!0,data:{heal:3}}),()=>new b({name:"Elder long sword",type:E,effect:T,data:{damage:6}})];var C=class extends a{onInit(){const e=this.element.querySelector("canvas");this.context=e.getContext("2d"),e.addEventListener("click",this.handleClick.bind(this)),this.map=null,this.ready=!1,this.onReady=null,this.sprites=new g(this.context,"./public/tilemap.png",()=>{this.createMap(),this.ready=!0,this.onReady&&this.onReady()},{hero:{x:4,y:0},snake:{x:4,y:1},orc:{x:11,y:0},city:{x:6,y:7},dungeonEnter:{x:4,y:3},treasure:{x:9,y:3},deadEnemy:{x:8,y:7}})}handleClick(e){const t=e.offsetX/32,n=e.offsetY/32,a=Math.floor(t),i=Math.floor(n),s=this.map[a][i];s.shown?null!=s.onClick&&s.onClick():(null!=s.onOpen&&s.onOpen(),this.checkCell(a,i)),this.drawMap()}setOnReady(e){this.onReady=e,this.ready&&this.onReady()}createMap(){this.map=[];for(let e=0;e<16;e++){let t=[];for(let e=0;e<16;e++)t[e]=new l({color:"white",type:o.EMPTY});this.map[e]=t}}createEntities(e,t){let n=0;for(;n<t;){const t=16*Math.random(),a=16*Math.random(),i=Math.floor(t),s=Math.floor(a);this.map[i][s].type===o.EMPTY&&(this.map[i][s]=e(),n++)}}clearCanvas(){this.context.fillStyle="white",this.context.fillRect(0,0,512,512)}checkCell(e,t){this.map[e][t].shown=!0;const n=this.countEnemies(e,t);n>0?this.map[e][t].enemies=n:this.checkEmptyCells(e,t)}checkEmptyCells(e,t){for(let n=e-1;n<=e+1;n++)for(let a=t-1;a<=t+1;a++){if(n!==e&&a!==t)continue;if(n<0||n>=16)continue;if(a<0||a>=16)continue;const i=this.map[n][a];i.shown||i.type!==o.EMPTY&&i.enabled||this.checkCell(n,a)}}drawRect(e,t,n="black"){this.context.fillStyle=n,this.context.fillRect(32*e,32*t,32,32)}drawText(e,t,n,a="red"){this.context.font="20px text",this.context.textAlign="center",this.context.textBaseline="middle",this.context.fillStyle=a,this.context.fillText(n,32*e+16,32*t+16)}drawMap(){let e=null;this.clearCanvas();for(let t=0;t<16;t++)for(let n=0;n<16;n++)if(e=this.map[t][n],e.shown){if(e.type!==o.EMPTY&&e.enabled?null!=e.img?this.sprites.draw(e.img,t,n):this.drawRect(t,n,e.color):(t+n)%2==0?this.drawRect(t,n,"white"):this.drawRect(t,n,"#faded9"),e.enemies>0&&e.type!==o.ENEMY){const a=e.type!==o.EMPTY&&e.enabled?"white":"black";this.drawText(t,n,e.enemies,a)}}else(t+n)%2==0?this.drawRect(t,n,"#364f6b"):this.drawRect(t,n,"#fc5185")}countEnemies(e,t){let n=0;for(let a=e-1;a<=e+1;a++)for(let e=t-1;e<=t+1;e++){if(a<0||a>=16)continue;if(e<0||e>=16)continue;const{type:t,enabled:i}=this.map[a][e];i&&t===o.ENEMY&&n++}return n}buildLevel(e){this.createMap();for(let t=0;t<e.enemies.length;t++){const{enemy:n,qty:a}=e.enemies[t];this.createEntities(n,a)}var t;this.createEntities(u,1),this.createEntities((t=e.maxItemLevel,()=>{const e=i(0,t);return x(U[e]())}),i(2,e.maxTreasures)),this.drawMap()}};var L=class extends a{onInit(){this.stats=null}setStats(e){this.stats=e,this.stats.onUpdate=e=>{"update"===e?this.updateUi():"hit"===e&&(this.updateUi(),this.animate("health"))},this.updateUi()}getStats(){return this.stats}updateUi(){this.element.querySelector("[name]").innerText=this.stats.name,this.element.querySelector("[health]").innerText=this.stats.getHealth(),this.element.querySelector("[damage]").innerText=this.stats.getDamage(),this.element.querySelector("[armor]").innerText=this.stats.getArmor(),this.element.querySelector("[dexterity]").innerText=this.stats.getDexterity()}addItem(e){X.inventory.addItem(e)}animate(e,t){const n=this.element.querySelector("["+e+"]").classList;n.add("animateNegative"),setTimeout(()=>{n.remove("animateNegative")},250)}};var R=class{constructor({name:e,health:t=0,damage:n=0,defence:a=0,dexterity:i=0}){this.name=e,this.damage=n,this.health=t,this.defence=a,this.dexterity=i,this.weapon=null,this.armor=null,this.onUpdate=null,this.def={health:t,damage:n}}setWeapon(e){return this.weapon=e,this.onUpdate&&this.onUpdate("update"),this}setArmor(e){return this.armor=e,this.onUpdate&&this.onUpdate("update"),this}heal(e=1){return this.health+=e,this.health>this.def.health&&(this.health=this.def.health),this.onUpdate&&this.onUpdate("update"),this}getHealth(){return this.health}getDamage(){let e=this.damage;return null!=this.weapon&&(e+=this.weapon.data.damage),e}getArmor(){let e=this.defence;return null!=this.armor&&(e+=this.armor.data.defence),e}getDexterity(){let e=this.dexterity;return null!=this.armor&&(e+=this.armor.data.dexterity||0),null!=this.weapon&&(e+=this.weapon.data.dexterity||0),e}hit(e){(e-=this.getArmor())>0&&(this.health-=e),this.onUpdate&&this.onUpdate("hit")}};var Y=class extends a{onInit(){this._onStart=null,this.element.querySelector("[enter]").addEventListener("click",()=>{const e=this.element.querySelector("#heroSelect").value;this._onStart&&this._onStart({hero:e})})}onStart(e){this._onStart=e}};const N=e=>{const t=document.createElement("div"),n=document.createElement("p"),a=document.createElement("button"),i=document.createElement("button");return n.innerText=e.name,a.innerText="Use",a.addEventListener("click",()=>{e.use(X.stats.getStats()),e.monoUse&&X.inventory.dropItem(e)}),i.innerText="Drop",i.addEventListener("click",()=>{X.inventory.dropItem(e)}),t.appendChild(n),t.appendChild(a),t.appendChild(i),t};var P=class extends a{onInit(){this.items=[]}addItem(e){this.items.push(e),this.renderInventory()}dropItem(e){for(let t=0;t<this.items.length;t++)if(this.items[t]===e)return this.items.splice(t,1),this.renderInventory(),!0;return!1}renderInventory(){const e=this.element.querySelector("[items]");e.innerHTML=null;for(let t=0;t<this.items.length;t++)e.appendChild(N(this.items[t]))}clear(){this.items=[]}};const D=new C({name:"map"}),A=new h({name:"battle"}),_=new L({name:"stats"}),j=new Y({name:"hero"}),H=new P({name:"inventory"});let W=0;const B=({hero:e})=>{D.setOnReady(()=>{const e=v[W];D.buildLevel(e)});let t=null;switch(e){case"warrior":t={name:"Warrior",health:6,damage:3,defence:2,dexterity:7};break;case"thief":t={name:"Thief",health:4,damage:2,defence:0,dexterity:11,startItems:[I()]};break;case"rogue":t={name:"Rogue",health:5,damage:2,defence:1,dexterity:9,startItems:[O()]}}const n=new R(t);if(_.setStats(n),null!=t.startItems)for(let e=0;e<t.startItems.length;e++)_.addItem(t.startItems[e]);_.show(),H.show(),j.hide(),G()},G=e=>{D.show(e),A.hide()},K=e=>{D.hide(),A.show(e)},X={map:D,battle:A,stats:_,inventory:H},z=()=>{W++;const e=v[W];D.buildLevel(e)},F=()=>{W=0,D.hide(),A.hide(),_.hide(),H.hide(),H.clear(),j.show()};j.onStart(({hero:e})=>{B({hero:e})}),F()}]);